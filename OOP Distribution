---STEP 1
--adding in month and payer_type
--bucketing patient OOP amounts by month
--run after OOP Landscape script

drop table if exists DN_0518_Amgen_OOP2;
create table DN_0518_Amgen_OOP2 as
select
patient_id
,Plan_Type as Payer_Type
,case
when year_month = '2015-04'
then 'April 2015'
when year_month = '2015-05'
then 'May 2015'
when year_month = '2015-06'
then 'June 2015'
when year_month = '2015-07'
then 'July 2015'
when year_month = '2015-08'
then 'August 2015'
when year_month = '2015-09'
then 'September 2015'
when year_month = '2015-10'
then 'October 2015'
when year_month = '2015-11'
then 'November 2015'
when year_month = '2015-12'
then 'December 2015'
when year_month = '2016-01'
then 'January 2016'
when year_month = '2016-02'
then 'February 2016'
when year_month = '2016-03'
then 'March 2016'
when year_month = '2016-04'
then 'April 2016'
when year_month = '2016-05'
then 'May 2016'
when year_month = '2016-06'
then 'June 2016'
when year_month = '2016-07'
then 'July 2016'
when year_month = '2016-08'
then 'August 2016'
when year_month = '2016-09'
then 'September 2016'
when year_month = '2016-10'
then 'October 2016'
when year_month = '2016-11'
then 'November 2016'
when year_month = '2016-12'
then 'December 2016'
when year_month = '2017-01'
then 'January 2017'
when year_month = '2017-02'
then 'February 2017'
when year_month = '2017-03'
then 'March 2017'
else NULL
end as Year_Month
,therapy
,sum(case
    when deductible_amount is NULL
    then 0
    else deductible_amount
  end)as total_deductible_amount_v2
,sum(
    case 
    when copayment_amount is NULL
    then 0
    else copayment_amount
  end)as total_copayment_amount_v2
  ,sum(
    case 
    when coinsurance_amount is NULL
    then 0
    else coinsurance_amount
    end)as total_coinsurance_amount_v2
    ,
sum(
    case 
    when deductible_amount is NULL
    then 0
    else deductible_amount
  end)
+sum(
    case 
    when copayment_amount is NULL
    then 0
    else copayment_amount
  end)
  +sum(
    case 
    when coinsurance_amount is NULL
    then 0
    else coinsurance_amount
    end)
as total_OOP_amount2
from DN_Amgen_Final_OOP_Landscape
where patient_id is not null and trim(patient_id) <> '' and patient_id not like 'XXX -%' 
group by
patient_id
,case
when year_month = '2015-04'
then 'April 2015'
when year_month = '2015-05'
then 'May 2015'
when year_month = '2015-06'
then 'June 2015'
when year_month = '2015-07'
then 'July 2015'
when year_month = '2015-08'
then 'August 2015'
when year_month = '2015-09'
then 'September 2015'
when year_month = '2015-10'
then 'October 2015'
when year_month = '2015-11'
then 'November 2015'
when year_month = '2015-12'
then 'December 2015'
when year_month = '2016-01'
then 'January 2016'
when year_month = '2016-02'
then 'February 2016'
when year_month = '2016-03'
then 'March 2016'
when year_month = '2016-04'
then 'April 2016'
when year_month = '2016-05'
then 'May 2016'
when year_month = '2016-06'
then 'June 2016'
when year_month = '2016-07'
then 'July 2016'
when year_month = '2016-08'
then 'August 2016'
when year_month = '2016-09'
then 'September 2016'
when year_month = '2016-10'
then 'October 2016'
when year_month = '2016-11'
then 'November 2016'
when year_month = '2016-12'
then 'December 2016'
when year_month = '2017-01'
then 'January 2017'
when year_month = '2017-02'
then 'February 2017'
when year_month = '2017-03'
then 'March 2017'
else NULL
end
,plan_type
,therapy;


select * from DN_0518_Amgen_OOP2
order by total_OOP_amount2 desc;

--checking that each patient is on one row
select count(distinct patient_id), count(*), therapy, year_month, payer_type from DN_0518_Amgen_OOP2
group by therapy, year_month, payer_type;

---STEP 2
--unioning together all the different OOP columns
drop table if exists DN_Amgen_unioned_OOP;
create table DN_Amgen_unioned_OOP as 
select patient_id, therapy, payer_Type, year_month, total_deductible_amount_V2 as OOP_Value, 'total_deductible_amount_v2' as OOP_Type
from DN_0518_Amgen_OOP2
union 
select patient_id, therapy, payer_Type, year_month, total_coinsurance_amount_V2 as OOP_Value, 'total_coinsurance_amount_V2' as OOP_Type
from DN_0518_Amgen_OOP2
union
select patient_id, therapy, payer_Type, year_month, total_copayment_amount_V2 as OOP_Value, 'total_copayment_amount_V2' as OOP_Type
from DN_0518_Amgen_OOP2
union 
select patient_id, therapy, payer_Type, year_month, total_OOP_amount2 as OOP_Value, 'total_oop_amount2' as OOP_Type
from DN_0518_Amgen_OOP2;

--checking to make sure that the month_date column is being created properly(there are still some nulls here)
select *
from DN_Amgen_unioned_OOP;

--STEP 3
--getting patients in bins for all payer types grouped together, also getting OOP averages
drop table DN_Amgen_OOP_051817_allpayers;
create table DN_Amgen_OOP_051817_allpayers as
select 
'All Payers' as payer_type
,therapy 
,year_month
--avg $ for deductible over the quarter
,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_deductible_amount_v2'       
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_deductible_amount_v2'
        then patient_id
        else null end)
        AS AVGDeductible
        
  --avg $ for coinsurance over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_coinsurance_amount_V2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_coinsurance_amount_V2'
        then patient_id
        else null end)
        AS AVGCoinsurance
        
  --avg $ for copay over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_copayment_amount_V2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_copayment_amount_V2'
        then patient_id
        else null end)
        AS AVGCopayment
        
   --avg $ for total oop over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_oop_amount2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_oop_amount2'
        then patient_id
        else null end)
        AS AVGOOP
        
--counts for patient bins
        ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_0_deductible
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_0to50_deductible
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_50to100_deductible
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_100to150_deductible
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_150to200_deductible
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_200to250_deductible
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_250to300_deductible
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_300plus_deductible
        
       ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_0_coinsurance
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_0to50_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_50to100_coinsurance
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_100to150_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_150to200_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_200to250_coinsurance
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_250to300_coinsurance
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_300plus_coinsurance
  
        ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_0_copayment
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_0to50_copayment
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_50to100_copayment
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_100to150_copayment
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_150to200_copayment
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_200to250_copayment
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_250to300_copayment
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_300plus_copayment

      ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_0_oop
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_0to50_oop
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_50to100_oop
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_100to150_oop
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_150to200_oop
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_200to250_oop
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_250to300_oop
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_300plus_oop      
,count(distinct patient_id) as allpats
 from DN_Amgen_unioned_OOP
 where year_month is not null
 group by 
'All Payers'
,therapy 
,year_month;

select * from DN_Amgen_OOP_051817_allpayers;
---COMMAND
--STEP 3

--getting patients in bins for all payer types
--getting count of patients in OOP bin ranges by month, payers split up individually
drop table DN_Amgen_OOP_051817_payers;
create table DN_Amgen_OOP_051817_payers as
select 
payer_type
,therapy 
,year_month
--avg $ for deductible over the quarter
,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_deductible_amount_v2'       
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_deductible_amount_v2'
        then patient_id
        else null end)
        AS AVGDeductible
        
  --avg $ for coinsurance over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_coinsurance_amount_V2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_coinsurance_amount_V2'
        then patient_id
        else null end)
        AS AVGCoinsurance
        
  --avg $ for copay over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_copayment_amount_V2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_copayment_amount_V2'
        then patient_id
        else null end)
        AS AVGCopayment
        
   --avg $ for total oop over the quarter
  ,sum(case
        when OOP_Value > 0 and OOP_Type = 'total_oop_amount2'
        then OOP_Value
        else null end)/
    count(distinct case
        when OOP_Value > 0 and OOP_Type = 'total_oop_amount2'
        then patient_id
        else null end)
        AS AVGOOP
        
--counts for patient bins
        ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_0_deductible
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_0to50_deductible
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_50to100_deductible
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_100to150_deductible
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_150to200_deductible
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_200to250_deductible
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_250to300_deductible
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_deductible_amount_v2'
    then patient_id
    else null
   end) as count_patients_300plus_deductible
        
       ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_0_coinsurance
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_0to50_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_50to100_coinsurance
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_100to150_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_150to200_coinsurance
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_200to250_coinsurance
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_250to300_coinsurance
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_coinsurance_amount_V2'
    then patient_id
    else null
   end) as count_patients_300plus_coinsurance
  
        ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_0_copayment
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_0to50_copayment
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_50to100_copayment
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_100to150_copayment
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_150to200_copayment
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_200to250_copayment
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_250to300_copayment
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_copayment_amount_V2'
    then patient_id
    else null
   end) as count_patients_300plus_copayment

      ,count(distinct
    case when OOP_Value = 0 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_0_oop
   
    ,count(distinct
    case when OOP_Value < 50 and OOP_Value >0 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_0to50_oop
   
   ,count(distinct
    case when OOP_Value >= 50 and OOP_Value < 100 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_50to100_oop
   
     ,count(distinct
    case when OOP_Value >= 100 and OOP_Value < 150 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_100to150_oop
   
   ,count(distinct
    case when OOP_Value >= 150 and OOP_Value < 200 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_150to200_oop
   
   ,count(distinct
    case when OOP_Value >= 200 and OOP_Value < 250 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_200to250_oop
   
    ,count(distinct
    case when OOP_Value >= 250 and OOP_Value < 300 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_250to300_oop
   
     ,count(distinct
    case when OOP_Value >= 300 and OOP_Type = 'total_oop_amount2'
    then patient_id
    else null
   end) as count_patients_300plus_oop      

,count(distinct patient_id) as allpats
 from DN_Amgen_unioned_OOP
  where year_month is not null
 group by 
payer_type
,therapy 
,year_month;

--COMMAND
--STEP 4

--unioning together two previous steps so that you have payer type individually, and then all payers grouped together as one
drop table if exists DN_AMgen_OOP_051817_final_OOP2;
create table DN_AMgen_OOP_051817_final_OOP2 as
select * from DN_Amgen_OOP_051817_allpayers
union
select * from DN_Amgen_OOP_051817_payers;


select * from DN_AMgen_OOP_051817_final_OOP2;

--COMMAND
--STEP 5
----table to create averages(previously DN_Amgen_OOP_051817_average_final)
drop table if exists DN_Amgen_OOP_051817_averages;
create table DN_Amgen_OOP_051817_averages as
select payer_type, therapy, year_month, allpats, AVGDeductible as AVG_OOP_Value, 'Deductible' as Type_of_Average
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, AVGCoinsurance as AVG_OOP_Value, 'Coinsurance' as Type_of_Average
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, AVGCopayment as AVG_OOP_Value, 'Copayment' as Type_of_Average
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, AVGOOP as AVG_OOP_Value, 'Total OOP' as Type_of_Average
from DN_AMgen_OOP_051817_final_OOP2 ;


--QC for this table
select * from DN_Amgen_OOP_051817_averages
where year_month = 'March 2017' and therapy = 'Prolia';

--STEP 6
--table for bins(changed this from DN_Amgen_OOP_unioned_OOP_new)
drop table if exists DN_Amgen_OOP_051817_bins;
create table DN_Amgen_OOP_051817_bins as
select payer_type, therapy,  year_month, allpats, count_patients_0_deductible as Patient_Count, 'count_patients_0_deductible' as Count_Type, Per_PatsWith_zeroDeductible as OOP_Percent_Value, 'Per_PatsWith_zeroDeductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '0' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0to50_deductible as Patient_Count, 'count_patients_0to50_deductible' as Count_Type, Per_PatsWith_0to50Deductible as OOP_Percent_Value, 'Per_PatsWith_0to50Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '0-50' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_50to100_deductible as Patient_Count, 'count_patients_50to100_deductible' as Count_Type, Per_PatsWith_50to100Deductible as OOP_Percent_Value, 'Per_PatsWith_50to100Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '50-100' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_100to150_deductible as Patient_Count, 'count_patients_100to150_deductible' as Count_Type, Per_PatsWith_100to150Deductible as OOP_Percent_Value, 'Per_PatsWith_100to150Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '100-150' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_150to200_deductible as Patient_Count, 'count_patients_150to200_deductible' as Count_Type, Per_PatsWith_150to200Deductible as OOP_Percent_Value, 'Per_PatsWith_150to200Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '150-200' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_200to250_deductible as Patient_Count, 'count_patients_200to250_deductible' as Count_Type, Per_PatsWith_200to250Deductible as OOP_Percent_Value, 'Per_PatsWith_200to250Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '200-250' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_250to300_deductible as Patient_Count, 'count_patients_250to300_deductible' as Count_Type, Per_PatsWith_250to300Deductible as OOP_Percent_Value, 'Per_PatsWith_250to300Deductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '250-300' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_300plus_deductible as Patient_Count, 'count_patients_300plus_deductible' as Count_Type, Per_PatsWith_300plusDeductible as OOP_Percent_Value, 'Per_PatsWith_300plusDeductible' as OOP_Bin_Range, 'Deductible' as OOP_Type, '300+' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0_copayment as Patient_Count, 'count_patients_0_copayment' as Count_Type, Per_PatsWith_zeroCopayment as OOP_Percent_Value, 'Per_PatsWith_zeroCopayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '0' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0to50_copayment as Patient_Count, 'count_patients_0to50_copayment' as Count_Type, Per_PatsWith_0to50Copayment as OOP_Percent_Value, 'Per_PatsWith_0to50Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '0-50' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_50to100_copayment as Patient_Count, 'count_patients_50to100_copayment' as Count_Type, Per_PatsWith_50to100Copayment as OOP_Percent_Value, 'Per_PatsWith_50to100Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '50-100' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_100to150_copayment as Patient_Count, 'count_patients_100to150_copayment' as Count_Type, Per_PatsWith_100to150Copayment as OOP_Percent_Value, 'Per_PatsWith_100to150Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '100-150' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_150to200_copayment as Patient_Count, 'count_patients_150to200_copayment' as Count_Type, Per_PatsWith_150to200Copayment as OOP_Percent_Value, 'Per_PatsWith_150to200Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '150-200' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_200to250_copayment as Patient_Count, 'count_patients_200to250_copayment' as Count_Type,  Per_PatsWith_200to250Copayment as OOP_Percent_Value, 'Per_PatsWith_200to250Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '200-250' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_250to300_copayment as Patient_Count, 'count_patients_250to300_copayment' as Count_Type, Per_PatsWith_250to300Copayment as OOP_Percent_Value, 'Per_PatsWith_250to300Copayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '250-300' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_300plus_copayment as Patient_Count, 'count_patients_300plus_copayment' as Count_Type, Per_PatsWith_300plusCopayment as OOP_Percent_Value, 'Per_PatsWith_300plusCopayment' as OOP_Bin_Range, 'Copayment' as OOP_Type, '300+' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0_coinsurance as Patient_Count, 'count_patients_0_coinsurance' as Count_Type, Per_PatsWith_zeroCoinsurance as OOP_Percent_Value, 'Per_PatsWith_zeroCoinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '0' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0to50_coinsurance as Patient_Count, 'count_patients_0to50_coinsurance' as Count_Type, Per_PatsWith_0to50Coinsurance as OOP_Percent_Value, 'Per_PatsWith_0to50Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '0-50' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_50to100_coinsurance as Patient_Count, 'count_patients_50to100_coinsurance' as Count_Type, Per_PatsWith_50to100Coinsurance as OOP_Percent_Value, 'Per_PatsWith_50to100Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '50-100' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_100to150_coinsurance as Patient_Count, 'count_patients_100to150_coinsurance' as Count_Type, Per_PatsWith_100to150Coinsurance as OOP_Percent_Value, 'Per_PatsWith_100to150Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '100-150' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_150to200_coinsurance as Patient_Count, 'count_patients_150to200_coinsurance' as Count_Type, Per_PatsWith_150to200Coinsurance as OOP_Percent_Value, 'Per_PatsWith_150to200Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '150-200' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_200to250_coinsurance as Patient_Count, 'count_patients_200to250_coinsurance' as Count_Type, Per_PatsWith_200to250Coinsurance as OOP_Percent_Value, 'Per_PatsWith_200to250Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '200-250' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_250to300_coinsurance as Patient_Count, 'count_patients_250to300_coinsurance' as Count_Type, Per_PatsWith_250to300Coinsurance as OOP_Percent_Value, 'Per_PatsWith_250to300Coinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '250-300' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_300plus_coinsurance as Patient_Count, 'count_patients_300plus_coinsurance' as Count_Type, Per_PatsWith_300plusCoinsurance as OOP_Percent_Value, 'Per_PatsWith_300plusCoinsurance' as OOP_Bin_Range, 'Coinsurance' as OOP_Type, '300+' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0_oop as Patient_Count, 'count_patients_0_oop' as Count_Type, Per_PatsWith_zeroOOP as OOP_Percent_Value, 'Per_PatsWith_zeroOOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '0' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_0to50_oop as Patient_Count, 'count_patients_0to50_oop' as Count_Type, Per_PatsWith_0to50OOP as OOP_Percent_Value, 'Per_PatsWith_0to50OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '0-50' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_50to100_oop as Patient_Count, 'count_patients_50to100_oop' as Count_Type, Per_PatsWith_50to100OOP as OOP_Percent_Value, 'Per_PatsWith_50to100OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '50-100' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_100to150_oop as Patient_Count, 'count_patients_100to150_oop' as Count_Type, Per_PatsWith_100to150OOP as OOP_Percent_Value, 'Per_PatsWith_100to150OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '100-150' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_150to200_oop as Patient_Count, 'count_patients_150to200_oop' as Count_Type, Per_PatsWith_150to200OOP as OOP_Percent_Value, 'Per_PatsWith_150to200OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '150-200' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_200to250_oop as Patient_Count, 'count_patients_200to250_oop' as Count_Type, Per_PatsWith_200to250OOP as OOP_Percent_Value, 'Per_PatsWith_200to250OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '200-250' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_250to300_oop as Patient_Count, 'count_patients_250to300_oop' as Count_Type, Per_PatsWith_250to300OOP as OOP_Percent_Value, 'Per_PatsWith_250to300OOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '250-300' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2
union
select payer_type, therapy, year_month, allpats, count_patients_300plus_oop as Patient_Count, 'count_patients_300plus_oop' as Count_Type, Per_PatsWith_300plusOOP as OOP_Percent_Value, 'Per_PatsWith_300plusOOP' as OOP_Bin_Range, 'Total OOP' as OOP_Type, '300+' as Total_Bin_Range
from DN_AMgen_OOP_051817_final_OOP2;


select * from DN_Amgen_OOP_051817_bins
where therapy = 'Prolia' and year_month = 'March 2017';
